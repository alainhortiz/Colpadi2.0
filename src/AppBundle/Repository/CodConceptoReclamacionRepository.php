<?php

namespace AppBundle\Repository;

use AppBundle\Entity\CodConceptoReclamacion;

/**
 * CodConceptoReclamacionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CodConceptoReclamacionRepository extends \Doctrine\ORM\EntityRepository
{
    public function agregarConceptoReclamacion($data)
    {
        try{
            $em = $this->getEntityManager();
            $concepto = new CodConceptoReclamacion();
            $concepto->setNombre(strtoupper($data['nombre']));

            $em->persist($concepto);
            $em->flush();
            $msg = $concepto;

        }catch (\Exception $e)
        {
            if(strpos($e->getMessage() , 'Duplicate entry') > 0)
            {
                $msg = 'El concepto ya existe , no se puede agregar';
            }
            else
            {
                $msg = 'Se produjo un error al insertar el concepto';
            }
        }

        return $msg;
    }

    public function modificarConceptoReclamacion($data)
    {
        try
        {
            $em = $this->getEntityManager();
            $concepto = $em->getRepository('AppBundle:CodConceptoReclamacion')->find($data['idConceptoReclamacion']);
            $concepto->setNombre(strtoupper($data['nombre']));

            $em->persist($concepto);
            $em->flush();
            $msg = $concepto;

        }catch (\Exception $e)
        {
            if(strpos($e->getMessage() , 'Duplicate entry') > 0)
            {
                $msg = 'Existe un concepto con este nombre  , no se puede hacer esta modificaciÃ³n';
            }
            else
            {
                $msg = 'Se produjo un error al modificar el concepto';
            }
        }

        return $msg;
    }

    public function eliminarConceptoReclamacion($id)
    {
        try {
            $em = $this->getEntityManager();
            $concepto = $em->getRepository('AppBundle:CodConceptoReclamacion')->find($id);

            $em->remove($concepto);
            $em->flush();
            $msg = $concepto;

        } catch (\Exception $e) {

            if (strpos($e->getMessage(), 'foreign key') > 0) {
                $msg = 'Existen datos asociados a este concepto , no se puede eliminar';
            } else {
                $msg = 'Se produjo un error al eliminar el concepto';
            }
        }
        return $msg;
    }

}

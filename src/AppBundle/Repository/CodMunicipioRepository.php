<?php

namespace AppBundle\Repository;

use AppBundle\Entity\CodMunicipio;

/**
 * CodMunicipioRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CodMunicipioRepository extends \Doctrine\ORM\EntityRepository
{
    public function  agregarMunicipio($data)
    {
        try{
            $em = $this->getEntityManager();
            $municipio = new CodMunicipio();
            $municipio->setCodigo($data['codigo']);
            $municipio->setNombre(strtoupper($data['nombre']));

            $provincia  = $em->getRepository('AppBundle:CodProvincia')->find($data['idProvincia']);
            $municipio->setProvincia($provincia);

            $em->persist($municipio);
            $em->flush();
            $msg = $municipio;

        }catch (\Exception $e)
        {
            if(strpos($e->getMessage() , 'Duplicate entry') > 0)
            {
                $msg = 'El municipio ya existe , no se puede agregar';
            }
            else
            {
                $msg = 'Se produjo un error al insertar el municipio';
            }
        }

        return $msg;
    }

    public function modificarMunicipio($data)
    {
        try
        {
            $em = $this->getEntityManager();
            $municipio = $em->getRepository('AppBundle:CodMunicipio')->find($data['idMunicipio']);
            $municipio->setCodigo($data['codigo']);
            $municipio->setNombre(strtoupper($data['nombre']));

            $provincia  = $em->getRepository('AppBundle:CodProvincia')->find($data['idProvincia']);
            $municipio->setProvincia($provincia);

            $em->persist($municipio);
            $em->flush();
            $msg = $municipio;

        }catch (\Exception $e)
        {
            if(strpos($e->getMessage() , 'Duplicate entry') > 0)
            {
                $msg = 'Existe un municipio con este código  , no se puede hacer esta modificación';
            }
            else
            {
                $msg = 'Se produjo un error al modificar el municipio';
            }
        }

        return $msg;
    }

    public function eliminarMunicipio($id)
    {
        try
        {
            $em = $this->getEntityManager();
            $municipio = $em->getRepository('AppBundle:CodMunicipio')->find($id);

            $em->remove($municipio);
            $em->flush();
            $msg = $municipio;

        }catch (\Exception $e){

            if(strpos($e->getMessage() , 'foreign key') > 0)
            {
                $msg = 'Existen datos asociados a este municipio , no se puede eliminar';
            }
            else
            {
                $msg = 'Se produjo un error al eliminar el municipio';
            }
        }
        return $msg;
    }

}

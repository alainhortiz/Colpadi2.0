<?php

namespace AppBundle\Repository;

use AppBundle\Entity\CodReclamacionLugar;

/**
 * CodReclamacionLugarRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CodReclamacionLugarRepository extends \Doctrine\ORM\EntityRepository
{
    public function  agregarReclamacionLugar($data)
    {
        try{
            $em = $this->getEntityManager();
            $reclamacionLugar = new CodReclamacionLugar();
            $reclamacionLugar->setNombre(strtoupper($data['nombre']));

            $em->persist($reclamacionLugar);
            $em->flush();
            $msg = $reclamacionLugar;

        }catch (\Exception $e)
        {
            if(strpos($e->getMessage() , 'Duplicate entry') > 0)
            {
                $msg = 'El lugar ya existe , no se puede agregar';
            }
            else
            {
                $msg = 'Se produjo un error al insertar el lugar';
            }
        }

        return $msg;
    }

    public function modificarReclamacionLugar($data)
    {
        try
        {
            $em = $this->getEntityManager();
            $reclamacionLugar = $em->getRepository('AppBundle:CodReclamacionLugar')->find($data['idReclamacionLugar']);
            $reclamacionLugar->setNombre(strtoupper($data['nombre']));

            $em->persist($reclamacionLugar);
            $em->flush();
            $msg = $reclamacionLugar;

        }catch (\Exception $e)
        {
            if(strpos($e->getMessage() , 'Duplicate entry') > 0)
            {
                $msg = 'Existe un lugar con este nombre  , no se puede hacer esta modificaciÃ³n';
            }
            else
            {
                $msg = 'Se produjo un error al modificar el lugar';
            }
        }

        return $msg;
    }

    public function eliminarReclamacionLugar($id)
    {
        try
        {
            $em = $this->getEntityManager();
            $reclamacionLugar = $em->getRepository('AppBundle:CodReclamacionLugar')->find($id);

            $em->remove($reclamacionLugar);
            $em->flush();
            $msg = $reclamacionLugar;

        }catch (\Exception $e){

            if(strpos($e->getMessage() , 'foreign key') > 0)
            {
                $msg = 'Existen datos asociados a este lugar , no se puede eliminar';
            }
            else
            {
                $msg = 'Se produjo un error al eliminar el lugar';
            }
        }
        return $msg;
    }
}
